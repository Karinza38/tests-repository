name: dns test

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-11', 'macos-12', 'macos-13', 'ubuntu-latest']
        try: ['0', '1', '2']

    steps:
      - name: hostname
        run: |
          echo -e "List the different names/addresses associsated with this host:\n\n"
          echo "hostname   : $(hostname $opt 2>/dev/null || echo '*error*')"
          for opt in '-A' '-d' '-f'; do
              echo "hostname $opt: $(hostname $opt 2>/dev/null || echo '*error*')"
          done
          
      - name: ipinfo
        shell: bash
        run: |
          echo "====view dns info===="
          scutil --dns 2>/dev/null
          echo "resolv.conf"
          sudo cat /etc/resolv.conf
          echo "====view ip info===="
          ifconfig 2>/dev/null
          echo "====view hosts file===="
          sudo cat /etc/hosts 2>/dev/null
          sudo cat /private/etc/hosts 2>/dev/null
          
      - name: nslookup1
        shell: bash
        run: |
          echo -e "Expecting nslookup to return $(hostname -f)\n\n"
          for host in "$(hostname)" "$(hostname -f)"; do
              echo "nslookup $host: $(nslookup "$host" 2>&1 | grep -E '(Name:|\*\*)' || true)"
          done

      - name: test-workaround
        shell: bash
        run: |
          echo -e "$(ipconfig getifaddr en0 2>/dev/null) $(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts 

      - name: nslookup2
        shell: bash
        run: |
          echo -e "Expecting nslookup to return $(hostname -f)\n\n"
          for host in "$(hostname)" "$(hostname -f)"; do
              echo "nslookup $host: $(nslookup "$host" 2>&1 | grep -E '(Name:|\*\*)' || true)"
          done

