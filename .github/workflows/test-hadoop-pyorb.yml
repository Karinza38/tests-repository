name: test-hadoop-pyorb

on:
  workflow_dispatch:
    inputs:
      source-code-branch:
        description: Branch name
        type: string
        required: false
      python-version:
        description: The Python version to use
        type: number
        required: false
        default: 3.8
      requirements:
        description: The path to the requirements file
        type: string
        required: false
        default: requirements/dev.txt
      fetch-depth:
        description: Number of commits to fetch
        type: string
        required: false
        default: '1'
      pytest-options:
        description: The pytest command-line arguments to use
        type: string
        required: false
      playbook-roles:
        description: The Logikal playbook roles to run (comma-separated list)
        type: string
        required: false
        default: 'hadoop'
      playbook-vars:
        description: The Logikal playbook variables to set (string-encoded JSON)
        type: string
        required: false
        default: '{}'
      upload-artifacts:
        description: Whether the upload artifacts when tests fail
        type: boolean
        required: false
        default: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-20.04']

    steps:
      - name: Code checkout
        uses: actions/checkout@v4
        with:
          repository: 'logikal-io/mindlab'
          ref: '${{ inputs.source-code-branch }}'

      # - uses: 'google-github-actions/auth@v2'
      #   with:
      #     credentials_json: '${{ secrets.GCP_CREDS }}'

      - uses: 'google-github-actions/auth@v2'
        with:
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}' # my-service-account@my-project.iam.gserviceaccount.com
          workload_identity_provider: '${{ secrets.GCP_WLD_IDENTITY_PROVIDER }}' # "projects/123456789/locations/global/workloadIdentityPools/github/providers/my-repo"

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - run: printenv

      - name: Run playbooks
        uses: logikal-io/run-logikal-playbook@v1
        if: inputs.playbook-roles != ''
        with:
          roles: ${{ inputs.playbook-roles }}
          vars: ${{ inputs.playbook-vars }}

      - uses: logikal-io/make-orb@v1
        with:
          requirements: ${{ inputs.requirements }}

      - name: Run pytest
        run: orb --command 'pytest ${{ inputs.pytest-options }}'
